$registryName = $companyAbbreviation.ToLower() + $systemAbbreviation.ToLower()
$serviceConnectionName = $systemName + "-" + $serviceName


Write-Host "  Get Credentials for Azure Container Registry" -ForegroundColor DarkYellow
$credentials = az acr credential show --name $registryName | ConvertFrom-Json
Throw-WhenError -output $credentials

#############################################################################################
# Provision Azure DevOps Variable Group
#############################################################################################

Write-Host "Provision Azure DevOps Variable Group" -ForegroundColor DarkGreen

Write-Host "  Check for existing Variable Group" -ForegroundColor DarkYellow
$variableGroupId = az pipelines variable-group list `
  --group-name "$serviceConnectionName" `
  --query "[0].id"

if ($variableGroupId.Length -eq 0) {

  Write-Host "  Create Variable Group" -ForegroundColor DarkYellow
  $variableGroupId = az pipelines variable-group create `
    --name "$serviceConnectionName" `
    --variables `
      ContainerRegistryLoginServer=$containerRegistryLoginServer `
      ContainerRegistryUserName=$($credentials.username) `
    --query id
  Throw-WhenError -output $variableGroupId

  Write-Host "  Create ContainerRegistryPassword secret" -ForegroundColor DarkYellow
  $output = az pipelines variable-group variable create `
    --id $variableGroupId `
    --name ContainerRegistryPassword `
    --value $($credentials.passwords[0].value) `
    --secret true
  Throw-WhenError -output $output

} else {

  Write-Host "  Update ContainerRegistryLoginServer" -ForegroundColor DarkYellow
  $output = az pipelines variable-group variable update `
    --id $variableGroupId `
    --name ContainerRegistryLoginServer `
    --value $containerRegistryLoginServer
  Throw-WhenError -output $output

  Write-Host "  Update ContainerRegistryUserName" -ForegroundColor DarkYellow
  $output = az pipelines variable-group variable update `
    --id $variableGroupId `
    --name ContainerRegistryUserName `
    --value $($credentials.username)
  Throw-WhenError -output $output

  Write-Host "  Update ContainerRegistryPassword" -ForegroundColor DarkYellow
  $output = az pipelines variable-group variable update `
    --id $variableGroupId `
    --name ContainerRegistryPassword `
    --value $($credentials.passwords[0].value) `
    --secret true
  Throw-WhenError -output $output
}