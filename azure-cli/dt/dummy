# Object IDs from Azure AD to grant access for developers to read key vault in Development/Dev environments
# This should be replaced with a single Azure AD group where these identities/users a added.
$developerIdentities = @(
  'c72d89d6-98f0-45b1-b799-9ec4e429ca79', #KLJ
  '472f342d-3e27-46f5-8ad3-8e2df1858d67', #PKO
  '6570f27d-2f45-4428-9a4b-517d571b6a21', #DKA
  '4dd5f3d0-5196-4434-bdd6-f1b59e5e55c7', #JHO
  '4882482f-2183-4f42-a5c4-b66e8f040456' #JFA
)

#############################################################################################
# Provision Digital Twins Instance
#############################################################################################
Write-Host "Provision Digital Twins Instance" -ForegroundColor DarkGreen

Write-Host "  Query Digital Twins Instance" -ForegroundColor DarkYellow
$output = az dt show `
--dt-name $digitalTwinsName `
--resource-group $resourceGroupName

if (!$?) {
    Write-Host "  Creating Digital Twins Instance" -ForegroundColor DarkYellow
    $output = az dt create `
        --resource-group $resourceGroupName `
        --dt-name $digitalTwinsName `
        --location $location `
        --assign-identity true `
        --tags $resourceTags

    Throw-WhenError -output $output

    if ($environmentType -eq 'DevTest') {
      for ($i = 0; $i -lt $developerIdentities.Count; $i++) {
        Write-Host "  Assigning 'Azure Digital Twins Data Owner' Role for developer $($i+1)" -ForegroundColor DarkYellow
        $output = az dt role-assignment create `
          --dt-name $digitalTwinsName `
          --resource-group $resourceGroupName `
          --assignee $developerIdentities[$i] `
          --role "Azure Digital Twins Data Owner"

        Throw-WhenError -output $output
      }
    }
} else {
	Write-Host "  Digital Twin already exists, skipping creation" -ForegroundColor DarkYellow
}

Throw-WhenError -output $output

Write-Host "  Adding eventHub endpoint and routes to Digital Twins instance '$digitalTwinsName'" -ForegroundColor DarkYellow
foreach ($eventHub in $eventHubs | Where-Object { $_.Name -eq "twins-event-hub"})
{
    Write-Host "  Creating twins hub endpoint for eventHub '$($eventHub.Name)'" -ForegroundColor DarkYellow
    $output = az dt endpoint create eventhub `
        --dt-name $digitalTwinsName `
        --endpoint-name "$($eventHub.Name)-endpoint" `
        --eventhub-resource-group $resourceGroupName `
        --eventhub-namespace $eventHubNamespaceName `
        --eventhub $eventHub.Name `
        --eventhub-policy $eventHub.AuthorizationRuleName

    Throw-WhenError -output $output

    Write-Host "  Querying twins hub endpoint provisioning status for '$($eventHub.Name)'" -ForegroundColor DarkYellow
    $output = az dt endpoint show `
        --dt-name $digitalTwinsName `
        --endpoint-name "$($eventHub.Name)-endpoint" `
        --resource-group $resourceGroupName `
        --query properties.provisioningState `
        -o tsv

    Throw-WhenError -output $output

    if ("Provisioning" -eq $output) {
        Write-Host "  Waiting on Digital Twins endpoint post-provisioning" -ForegroundColor DarkYellow
        Start-Sleep -Seconds 20
    }

    Write-Host "  Creating twins hub event route for eventHub '$($eventHub.Name)'" -ForegroundColor DarkYellow
    $output = az dt route create `
        --dt-name $digitalTwinsName `
        --endpoint-name "$($eventHub.Name)-endpoint" `
        --route-name "$($eventHub.Name)-route" `
        --filter "type = 'Microsoft.DigitalTwins.Twin.Update'"

    Throw-WhenError -output $output
}