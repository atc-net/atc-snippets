# Object IDs from Azure AD to grant access for developers to read key vault in Development/Dev environments
# This should be replaced with a single Azure AD group where these identities/users a added.
$developerIdentities = @(
  '7533b49c-bde9-4c34-8578-d1ff768387fa', #CHR
  'c7601555-8d35-4977-861a-c6b52b8d695a', #REN
  '03f6c350-1756-40ad-b2d9-2539604fa204', #SKP
  '942a8821-5bea-44ee-819f-d66bb8afca46', #LAS
  'c72d89d6-98f0-45b1-b799-9ec4e429ca79', #KLJ
  '472f342d-3e27-46f5-8ad3-8e2df1858d67', #PKO
  '6570f27d-2f45-4428-9a4b-517d571b6a21', #DKA
  'e8526521-2bd6-4241-8eb0-2bea8018e9e5', #MCJ
  '4dd5f3d0-5196-4434-bdd6-f1b59e5e55c7', #JHO
  '4882482f-2183-4f42-a5c4-b66e8f040456', #JFA
  '74c0f875-2b6d-4067-b068-5f2afe19ccab', #EGH
  '7c44cb4e-7430-4b37-aec8-1bed89850176', #MJK
  '4630e79d-2887-4f9a-9050-feb639254968'  #MFO
)

#############################################################################################
# Provision Key Vault
#############################################################################################
Write-Host "Provision Key Vault" -ForegroundColor DarkGreen

Write-Host "  Query Key Vault" -ForegroundColor DarkYellow
$output = az keyvault show `
--name $keyVaultName `
--resource-group $resourceGroupName `

if (!$?) {
  Write-Host "  Create key vault" -ForegroundColor DarkYellow
	  $output = az keyvault create `
		--name $keyVaultName `
		--location $location `
		--resource-group $resourceGroupName `
		--sku 'standard' `
		--enabled-for-template-deployment true `
		--tags $resourceTags

    Throw-WhenError -output $output

    Write-Host "  Grant access to the spn" -ForegroundColor DarkYellow
    $output = az keyvault set-policy `
      --name $keyVaultName `
      --resource-group $resourceGroupName `
      --object-id $env:servicePrincipalId `
      --secret-permissions list get set

    Throw-WhenError -output $output

    if ($environmentType -eq 'DevTest') {
      for ($i = 0; $i -lt $developerIdentities.Count; $i++) {
        Write-Host "  Grant access for developer $($i+1)" -ForegroundColor DarkYellow
        $output = az keyvault set-policy `
          --name $keyVaultName `
          --resource-group $resourceGroupName `
          --object-id $developerIdentities[$i] `
          --secret-permissions list get set delete

        Throw-WhenError -output $output
      }
    }
} else {
	Write-Host "  Key vault already exists, skipping creation" -ForegroundColor DarkYellow
}

Throw-WhenError -output $output